name: Gradle Publish

on:
  push:
    branches:
    - develop
  schedule:
    - cron: 0 3 * * * # Daily 3 a.m.

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
    - name: Execute Gradle build
      run: ./gradlew -Djava.security.egd=file:/dev/./urandom -Dorg.gradle.console=plain --no-daemon -PverboseTests=true check
    - name: Gradle Dependency Check Analyze
      run: ./gradlew -Djava.security.egd=file:/dev/./urandom -Dorg.gradle.console=plain --no-daemon dependencyCheckAnalyze
    - name: Publish package
      if: success()
      run: ./gradlew -Djava.security.egd=file:/dev/./urandom -Dorg.gradle.console=plain --no-daemon publish
      env:
        ORG_GRADLE_PROJECT_repoUsername: deployment
        ORG_GRADLE_PROJECT_repoPassword: ${{ secrets.NEXUS_REPO_PASSWORD }}
    - name: Notify Teams About Failure
      if: ${{ failure() }}
      run: |
         cat << EOF > message.json
         {"@type":"MessageCard","@context":"https://schema.org/extensions","summary":"Gradle Publish Failed!","themeColor":"ff0000","title":"Failure Notification from GitHub Gradle Publish","sections":[{"facts":[{"name":"Status:","value":"Failed"},{"name":"Repository:","value":"$GITHUB_REPOSITORY"},{"name":"Branch:","value":"$GITHUB_REF_NAME"},{"name":"Commit:","value":"$GITHUB_SHA"}]}],"potentialAction":[{"@type":"OpenUri","name":"View on GitHub","targets":[{"os":"default","uri":"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"}]}]}
         EOF
         curl -X POST ${{ secrets.TEAMS_IDN_WH_URL }} --header "Content-Type: application/json" -d @message.json
    - name: Get latest workflow run status
      if: ${{ success() }}
      uses: actions/github-script@v6
      id: latest-workflow-status
      with:
        script: |
          const runs = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: "gradle-publish.yml",
            per_page: 2
          })
          return runs.data.workflow_runs[1].conclusion
        result-encoding: string
    # If previous workflow run failed and the current succeeded
    - name: Notify Teams About Failure Recovery
      if: ${{ success() && steps.latest-workflow-status.outputs.result == 'failure' }}
      run: |
         cat << EOF > message.json
         {"@type":"MessageCard","@context":"https://schema.org/extensions","summary":"Gradle Publish Back to Normal!","themeColor":"00ff00","title":"Success Notification from GitHub Gradle Publish","sections":[{"facts":[{"name":"Status:","value":"Back to Normal"},{"name":"Repository:","value":"$GITHUB_REPOSITORY"},{"name":"Branch:","value":"$GITHUB_REF_NAME"},{"name":"Commit:","value":"$GITHUB_SHA"}]}],"potentialAction":[{"@type":"OpenUri","name":"View on GitHub","targets":[{"os":"default","uri":"$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"}]}]}
         EOF
         curl -X POST ${{ secrets.TEAMS_IDN_WH_URL }} --header "Content-Type: application/json" -d @message.json
